# AppVeyor.com is a Continuous Integration service to build and run tests under Windows

build: off


environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: 'cmd /E:ON /V:ON /C .\run_with_env.cmd'

  matrix:
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda

    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35

    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda36

image: Visual Studio 2017

platform:
- x86
- x64

init:
  - ps: if ($Env:PLATFORM -eq "x64") { $Env:CONDA = "${Env:CONDA}-x64" }
  - ps: Write-Host $Env:PYTHON_VERSION
  - ps: Write-Host $Env:CONDA
  - ps: Write-Host $Env:GITHUB_REPO_NAME
  - ps: Write-Host $Env:PLATFORM
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG_NAME
  - ps: Write-Host $Env:APPVEYOR_REPO_NAME

install:
  # Make sure the compiler is accessible
  - '"%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" %PLATFORM%'

  # Load the conda root environment, configure and install some packages
  - '"%CONDA%\Scripts\activate.bat"'
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build anaconda-client numpy cython
  # Install codecov tool for uploading coverage reports
  - pip install codecov coverage
  # Show conda info for debugging
  - conda info -a
 
  - "conda create -q -n test-environment python=%PYTHON% numpy scipy matplotlib cython"
  - activate test-environment
  - python --version
  #- pip install discretize
  - python setup.py build_ext --inplace
